const path = require('path');

const eslintConfig = {
	root: true,
	parser: '@babel/eslint-parser',
	extends: ['plugin:@wordpress/eslint-plugin/recommended'],
	settings: {
		'import/resolver': {
			node: {},
			webpack: {
				config: path.join(__dirname, '/webpack.config.js'),
			},
			alias: [
				['@kadence-bundled/admin-notices', './src/extension/admin-notices'],
				['@kadence/optimizer', './includes/resources/Optimizer/assets/js/optimizer'],
			],
		},
	},
	globals: {
		kt_blocks_params: 'readonly',
		kadenceHeaderConfig: 'readonly',
		kadence_blocks_params: 'writable',
		kt_deregister_params: 'readonly',
		kadence_blocks_user_params: 'readonly',
		kadence_blocks_parallax: 'readonly',
		kadence_blocks_form_params: 'readonly',
		form_data: 'readonly',
		grecaptcha: 'readonly',
		kb_adv_form_params: 'readonly',
		kadence_video_pop: 'readonly',
		kadenceExtensionImagePicker: 'readonly',
		kt_blocks_default_size: 'readonly',
		kb_glightbox: 'readonly',
		AOS: 'readonly',
		kadenceHomeParams: 'readonly',
		jarallax: 'readonly',
		jQuery: 'readonly',
		sessionStorage: 'writable',
		localStorage: 'writable',
		FormData: 'readonly',
		location: 'readonly',
		FileReader: 'readonly',
		Headers: 'readonly',
		pagenow: 'readonly',
		ENTER: 'readonly',
		Splide: 'readonly',
		MouseEvent: 'readonly',
		countUp: 'readonly',
		CustomEvent: 'readonly',
		DOMParser: 'readonly',
		KadenceAccordion: 'readonly',
		Gumshoe: 'readonly',
		HTMLElement: 'readonly',
		XMLHttpRequest: 'readonly',
		Typed: 'readonly',
		define: 'readonly',
		history: 'writable',
		filteredBlockPatterns: 'readable',
		onSelectBlockPattern: 'readable',
		blockCode: 'readable',
		scrollTo: 'readable',
		Image: 'readable',
		Masonry: 'readable',
		IntersectionObserver: 'readable',
		requestAnimationFrame: 'readable',
		requestIdleCallback: 'readable',
		getComputedStyle: 'readable',
		ScrollMagic: 'readable',
		kadence_pro_video_pop: 'readable',
		kadence_blocks_params_ico: 'readable',
		kadence_blocks_params_fa: 'readable',
	},
	rules: {
		'@wordpress/i18n-text-domain': [
			'error',
			{
				allowedTextDomain: ['default', 'kadence-blocks', 'kadence-starter-templates'],
			},
		],
		'import/no-unresolved': [
			'error',
			{
				ignore: ['@kadence/icons', '@kadence/components', '@kadence/helpers', '@wordpress/*'],
			},
		],
		'import/no-extraneous-dependencies': 'off',
		'no-unused-vars': 'off',
		'react-hooks/exhaustive-deps': 'off',
		'no-shadow': 'off',
		'jsdoc/require-param': 'off',
		'no-nested-ternary': 'off',
		camelcase: 'off',
		'@wordpress/no-unsafe-wp-apis': 'off',
		'react-hooks/rules-of-hooks': 'off',
		'no-console': 'off',
		'react/jsx-no-target-blank': 'off',
		'array-callback-return': 'off',
		'jsdoc/check-types': 'off',
		'jsdoc/check-tag-names': 'off',
		'jsdoc/newline-after-description': 'off',
		'jsx-a11y/label-has-associated-control': 'off',
		eqeqeq: 'off',
		'no-unused-expressions': 'off',
		'jsx-a11y/no-autofocus': 'off',
		'jsdoc/check-line-alignment': 'off',
		'react/no-unknown-property': 'off',
		'react/jsx-key': 'off',
		'jsdoc/check-param-names': 'off',
		'jsdoc/no-undefined-types': 'off',
		'jsx-a11y/click-events-have-key-events': 'off',
		'jsdoc/valid-types': 'off',
		'jsx-a11y/interactive-supports-focus': 'off',
		'jsdoc/require-returns-description': 'off',
		'jsx-a11y/no-static-element-interactions': 'off',
		'jsx-a11y/aria-role': 'off',
		'jsdoc/require-param-type': 'off',
		'no-redeclare': 'off',
		'import/default': 'off',
		'jsx-a11y/alt-text': 'off',
		'no-bitwise': 'off',
		'jsdoc/require-returns-check': 'off',
		'@wordpress/no-global-active-element': 'off',
	},
	overrides: [
		{
			files: ['src/assets/js/**'],
			rules: {
				'no-var': 'off',
			},
		},
	],
	ignorePatterns: [],
};

module.exports = eslintConfig;
