/**
 * Editor only CSS. (uses frontend styles as it's base)
 * Styles for both the navigation and nav link block
 */

@use "../../assets/css/variables" as vars;

@use "./style" as style;

.wp-block-kadence-navigation {
	//make sure margin top/bottom default to 0
	margin-top: 0;
	margin-bottom: 0;

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop full-height-menu
	&.navigation-desktop-orientation-horizontal .navigation-desktop-style-underline-fullheight,
	&.navigation-desktop-orientation-horizontal .navigation-desktop-style-fullheight {
		@include style.navigation-full-height-styles();
	}
	//Tablet full-height-menu
	&.navigation-tablet-orientation-horizontal .navigation-tablet-style-underline-fullheight,
	&.navigation-tablet-orientation-horizontal .navigation-tablet-style-fullheight {
		@include style.navigation-full-height-styles();
	}
	//Mobile full-height-menu
	&.navigation-mobile-orientation-horizontal .navigation-mobile-style-underline-fullheight,
	&.navigation-mobile-orientation-horizontal .navigation-mobile-style-fullheight {
		@include style.navigation-full-height-styles();
	}

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop underline menu
	&.navigation-desktop-orientation-horizontal .navigation[class*="navigation-desktop-style-underline"] {
		@include style.navigation-underline-styles();
	}
	//Tablet underline menu
	&.navigation-tablet-orientation-horizontal .navigation[class*="navigation-tablet-style-underline"] {
		@include style.navigation-underline-styles();
	}
	//Mobile underline menu
	&.navigation-mobile-orientation-horizontal .navigation[class*="navigation-mobile-style-underline"] {
		@include style.navigation-underline-styles();
	}

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop horizontal menu
	&.navigation-desktop-orientation-horizontal {
		@include style.horizontal-navigation-base-styles;
	}
	//Tablet horizontal menu
	&.navigation-tablet-orientation-horizontal {
		@include style.horizontal-navigation-base-styles;
	}
	//Mobile horizontal menu
	&.navigation-mobile-orientation-horizontal {
		@include style.horizontal-navigation-base-styles;
	}

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop vertical menu
	&.navigation-desktop-orientation-vertical {
		@include style.vertical-navigation-base-styles;
	}
	//Tablet vertical menu
	&.navigation-tablet-orientation-vertical {
		@include style.vertical-navigation-base-styles;
	}
	//Mobile vertical menu
	&.navigation-mobile-orientation-vertical {
		@include style.vertical-navigation-base-styles;
	}

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	// //Desktop stretch
	// &.kb-navigation-desktop-horizontal-layout-stretch.navigation-desktop-orientation-horizontal {
	// 	@include style.layout-stretch-styles();
	// }
	// //Tablet stretch
	// &.kb-navigation-tablet-horizontal-layout-stretch.navigation-tablet-orientation-horizontal {
	// 	@include style.layout-stretch-styles();
	// }
	// //Mobile stretch
	// &.kb-navigation-mobile-horizontal-layout-stretch.navigation-mobile-orientation-horizontal {
	// 	@include style.layout-stretch-styles();
	// }

	&.kb-navigation-horizontal-layout-stretch.kb-navigation-orientation-horizontal {
		@include style.layout-stretch-styles();
		&.kb-navigation-layout-stretch-fill {
			@include style.layout-fill-stretch-styles();
		}
	}
	&.kb-navigation-horizontal-layout-grid.kb-navigation-orientation-horizontal {
		@include style.layout-grid-styles();
	}

	//Some random editor stuff
	.kb-link-warp {
		--kb-nav-link-title-wrap-display: flex;
	}
	// .kb-nav-item-title-wrap {
	// 	align-items: center;
	// }
	.has-child {
		cursor: pointer;

		.wp-block-kadence-navigation__submenu-container {
			z-index: z-index(".has-child .wp-block-kadence-navigation__submenu-container");
		}

		&:hover {
			.wp-block-kadence-navigation__submenu-container {
				z-index: z-index(".has-child:hover .wp-block-kadence-navigation__submenu-container");
			}
		}

		// Show on editor selected, even if on frontend it only stays open on focus-within.
		&.is-selected,
		&.has-child-selected {
			> .wp-block-kadence-navigation__submenu-container {
				// We use important here because if the parent block is selected and submenus are present, they should always be visible.
				visibility: visible !important;
				opacity: 1 !important;
				min-width: 200px !important;
				height: auto !important;
				width: auto !important;
				overflow: visible !important;
			}
		}
	}
	//small fix for editor default margins on empty sub menu lists
	ul {
		margin: 0;
	}
}
// Fix for editor only.
.editor-styles-wrapper .wp-block-kadence-rowlayout .wp-block-kadence-navigation .menu {
	padding-left: var(--kb-nav-padding-left, 0);
}
// This is needed to prevent core gutenberg styling from adding a margin auto.
.wp-block-kadence-navigation .menu-item {
	margin-left: unset;
	margin-right: unset;
}

/*--------------------------------------------------------------
 ## Navigation Link item styles. (pulled in from their separated file for performance)
--------------------------------------------------------------*/
.wp-block-kadence-navigation-link {
	/*--------------------------------------------------------------
	 ## Other Editor Stuff
	--------------------------------------------------------------*/
	&.is-editing,
	&.is-selected {
		min-width: 20px;
	}

	.block-list-appender {
		margin-top: 20px;
		// The right margin should be set to auto, so as to not shift layout in flex containers.
		margin-right: auto;
		margin-bottom: 20px;
		margin-left: 20px;
		position: relative;
	}

	//in editor the nav item <a> shouldn't get the clicky pointer
	.kb-nav-link-content {
		cursor: text;
	}
}

/*--------------------------------------------------------------
 ## Nav link editor features from the core copy
--------------------------------------------------------------*/
.wp-block-kadence-navigation-link__invalid-item {
	color: #000;
}

/**
 * Nav item setup state. Is shown when a nav item has no URL configured.
 */
.wp-block-kadence-navigation-link__placeholder {
	position: relative;

	// While in a placeholder state, hide any underlines the theme might add.
	text-decoration: none !important;
	box-shadow: none !important;
	background-image: none !important;

	// Draw a wavy underline.
	.wp-block-kadence-navigation-link__placeholder-text span {
		$blur: 10%;
		$width: 6%;
		$stop1: 30%;
		$stop2: 64%;

		--wp-underline-color: var(--wp-admin-theme-color);
		.is-dark-theme & {
			--wp-underline-color: darkgray;
		}

		background-image: linear-gradient(
				45deg,
				transparent ($stop1 - $blur),
				var(--wp-underline-color) $stop1,
				var(--wp-underline-color) ($stop1 + $width),
				transparent ($stop1 + $width + $blur)
			),
			linear-gradient(
				135deg,
				transparent ($stop2 - $blur),
				var(--wp-underline-color) $stop2,
				var(--wp-underline-color) ($stop2 + $width),
				transparent ($stop2 + $width + $blur)
			);
		background-position: 0 100%;
		background-size: 6px 3px;
		background-repeat: repeat-x;

		// Since applied to a span, it doesn't change the footprint of the item,
		// but it does vertically shift the underline to better align.
		padding-bottom: 0.1em;
	}

	// This needs extra specificity.
	&.kb-nav-link-content {
		cursor: pointer;
	}
}

/**
* Link Control Transforms
*/
.link-control-transform {
	border-top: 1px solid gray;
	padding: 0 20px 10px 20px;
}
.link-control-transform__subheading {
	font-size: 11px;
	text-transform: uppercase;
	font-weight: 500;
	color: darkgray;
	margin-bottom: 1.5em;
}
.link-control-transform__items {
	display: flex;
	justify-content: space-between;
}
.link-control-transform__item {
	flex-basis: 33%;
	flex-direction: column;
	gap: 10px;
	height: auto;
}

.components-button.kb-nav-link-edit-link-button {
	margin-top: -14px;
	display: block;
}

// Mega onboarding skip button.
.kb-mega-onboard-select-layout {
	.kb-mega-onboard-title {
		padding-bottom: 8px;
	}
	button.components-button.kt-layout-btn.kb-mega-onboard-skip.is-small {
		width: 100% !important;
		text-align: center;
		justify-content: center;
		border: 0;
		padding: 2px;
		margin-right: 0;
		height: auto;
		font-size: 11px;
		margin-bottom: 5px;
	}
	.kb-mega-onboard-divider-title {
		display: flex;
		align-items: center;
		max-width: 800px;
		margin: 0 auto;
		margin-top: 1px;
		height: 60px;
		position: relative;
		text-align: center;
		justify-content: center;
		font-size: 1rem;
		text-transform: lowercase;
		&:before {
			content: "";
			height: 1px;
			background-color: #aaa;
			width: 100%;
			position: absolute;
			top: 50%;
		}
		span {
			background: white;
			padding: 0 10px;
			position: relative;
			z-index: 1;
		}
	}
	.kb-mega-onboard-design-options {
		.components-button.kt-layout-btn {
			height: 70px;
			svg {
				width: 120px;
				height: 65px;
			}
		}
	}
}
